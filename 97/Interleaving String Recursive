Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

Example 1:

Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbcbcac"
Output: true
Example 2:

Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbbaccc"
Output: false

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/interleaving-string
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s3 == null || s3.length() == 0){
            if((s1 == null || s1.length() ==0) && (s2 == null || s2.length() == 0)){
                return true;
            }
            else{
                return false;
            }
        }
        
        if(s2 == null || s2.length() == 0){
            if(s1 == null || s1.length() == 0){
                return false;
            }
            else{
                return s3.equals(s1);
            } 
        }
        
        if(s1 == null || s1.length() == 0){
            return s3.equals(s2);
        }
        
        if(s3.length() != s1.length() + s2.length()){
            return false;
        }
        
        /*
         * s1: a b c
         * s2: d e
         *
         * de   abc ()
         * d    a (e bc)
         *      a (de bc)
         */
        if((s2 + s1).equals(s3)){
            return true;
        }
        
        for(int i = s2.length()-1; i > -1; i--){
            String start = s2.substring(0, i) + s1.substring(0, 1);
            
            if(s3.startsWith(start)){
                if(isInterleave(s1.substring(1, s1.length()), s2.substring(i, s2.length()), s3.substring(start.length(), s3.length()))){
                    return true;
                }     
            }
        }
        
        return false;
    }
}
